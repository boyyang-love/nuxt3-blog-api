syntax = "v1"

import "./base.api"

type (
	LinkCreateReq {
		WebsiteName string `json:"website_name"`
		WebsiteUrl  string `json:"website_url"`
		WebsiteIcon string `json:"website_icon"`
		WebsiteDesc string `json:"website_desc"`
		Email       string `json:"email"`
		Code        string `json:"code"`
	}
	LinkCreateRes {
		Base
	}
	LinkListReq {
		Page   int `json:"page,optional"`
		Limit  int `json:"limit,optional"`
		Status int `json:"status,optional"`
	}
	LinkListRes {
		Base
		Data  LinkListData `json:"data"`
	}
	LinkListData {
		Count int64         `json:"count"`
		List []LinkListItem `json:"list"`
	}
	LinkListItem {
		WebsiteName string `json:"website_name"`
		WebsiteUrl  string `json:"website_url"`
		WebsiteIcon string `json:"website_icon"`
		WebsiteDesc string `json:"website_desc"`
		Email       string `json:"email"`
		Status      int    `json:"status"`
	}
	LinkUpdateReq {
		Id          int    `json:"id"`
		WebsiteName string `json:"website_name"`
		WebsiteUrl  string `json:"website_url"`
		WebsiteIcon string `json:"website_icon"`
		Email       string `json:"email"`
	}
	LinkUpdateRes {
		Base
	}
	LinkStatusUpdateReq {
		Id     int `json:"id"`
		Status int `json:"status"`
	}
	LinkStatusUpdateRes {
		Base
	}
	LinkDeleteReq {
		Id int `json:"id"`
	}
	LinkDeleteRes {
		Base
	}
)

@server (
	group: link
)
service blog_backend {
	@handler CreateLink
	post /link/create (LinkCreateReq) returns (LinkCreateRes)

	@handler ListLink
	get /link/list (LinkListReq) returns (LinkListRes)

	@handler UpdateLink
	post /link/update (LinkUpdateReq) returns (LinkUpdateRes)

	@handler UpdateStatusLink
	post /link/status/update (LinkStatusUpdateReq) returns (LinkStatusUpdateRes)

	@handler DeleteLink
	post /link/delete (LinkDeleteReq) returns (LinkDeleteRes)
}

