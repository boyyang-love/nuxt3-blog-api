syntax = "v1"

type (
    ListTagReq {
        Type string `form:"type,options=[image,article]"`
    }
    ListTagRes {
        Tags []TagInfo `json:"tags"`
    }
    TagInfo {
        Id uint `json:"id" form:"id" gorm:"primaryKey"`
        Uid string `json:"uid" form:"uid"`
        // 字段
        TagName string `json:"tag_name" form:"tag_name"`
        Type string `json:"type" form:"type" gorm:"type:enum('image', 'article')"`
    }
)

type (
    CreateTagReq {
        Name string `json:"name"`
        Type string `json:"type,options=[article,image]"`
    }
    CreateTagRes {
        Message string `json:"message"`
    }
)

type (
    UpdateTagReq {
        Id uint `json:"id"`
        Name string `json:"name"`
    }
    UpdateTagRes {
        Message string `json:"message"`
    }
)

type (
    DeleteTagReq {
        Id uint `json:"id"`
    }
    DeleteTagRes {
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    group: tag
)
service blog_backend {
    @handler ListTag
    get /tag/list (ListTagReq) returns (ListTagRes)

    @handler CreateTag
    post /tag/create (CreateTagReq) returns (CreateTagRes)

    @handler UpdateTag
    post /tag/update (UpdateTagReq) returns (UpdateTagRes)

    @handler DeleteTag
    post /tag/delete (DeleteTagReq) returns (DeleteTagRes)
}

